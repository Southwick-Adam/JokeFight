[gd_scene load_steps=7 format=2]

[ext_resource path="res://assets/pixel.png" type="Texture" id=1]
[ext_resource path="res://animations/adam_ult.tres" type="Animation" id=2]
[ext_resource path="res://scripts/adam_ult.gd" type="Script" id=3]
[ext_resource path="res://assets/GlacialIndifference-Italic.otf" type="DynamicFontData" id=4]

[sub_resource type="DynamicFont" id=1]
size = 14
use_mipmaps = true
use_filter = true
font_data = ExtResource( 4 )

[sub_resource type="DynamicFont" id=2]
size = 32
use_mipmaps = true
use_filter = true
font_data = ExtResource( 4 )

[node name="adam_ult" type="Node2D"]
z_index = -10
script = ExtResource( 3 )

[node name="back" type="Sprite" parent="."]
modulate = Color( 0, 0, 0, 1 )
position = Vector2( 589.558, 346.552 )
scale = Vector2( 1190.47, 709.386 )
texture = ExtResource( 1 )

[node name="Position2D" type="Position2D" parent="."]
position = Vector2( 30, -964.97 )

[node name="Label" type="Label" parent="Position2D"]
margin_left = 15.627
margin_right = 698.627
margin_bottom = 1572.0
custom_fonts/font = SubResource( 1 )
custom_colors/font_color = Color( 1, 0, 0, 1 )
text = "extends Node2D

var beam_target
var can_shoot = true
var boomstate = 1

# Called when the node enters the scene tree for the first time.
func _ready():
	pass # Replace with function body.
	
func _input(event):
	if event.is_action_pressed(\"x\") and can_shoot:
		$KinematicBody2D/Sprite/gun/beam.show()
		$KinematicBody2D/Sprite/gun/beam.monitoring = true
	if event.is_action_released(\"x\"):
		$KinematicBody2D/Sprite/gun/beam.hide()
		$KinematicBody2D/Sprite/gun/beam.monitoring = false
#SP SPEND
	if event.is_action_pressed(\"c\") and boomstate < 3 and $KinematicBody2D.sp >= 33:
		boomstate += 1
		_boom_state(boomstate)
		$BoomTimer.start()
		$KinematicBody2D.sp -= 33

func _process(_delta):
#BEAM
	if beam_target != null:
		beam_target._damage(0.2)
	if $KinematicBody2D/Sprite/gun/beam.visible == true:
		$KinematicBody2D/Sprite/gun/beam/red.scale.x += ($KinematicBody2D/Sprite/gun/beam/Sprite.scale.x)/130
	if $KinematicBody2D/Sprite/gun/beam/red.scale.x >= $KinematicBody2D/Sprite/gun/beam/Sprite.scale.x:
		$KinematicBody2D/Sprite/gun/beam.hide()
		$KinematicBody2D/Sprite/gun/beam.monitoring = false
		$KinematicBody2D/Sprite/gun/beam/red.scale.x = 0
		$ReloadTimer.start()
		$KinematicBody2D/Sprite/gun/dot.show()
		can_shoot = false

func _harm(body):
	var rng = randf()
	body._damage(4 + (3 * rng))

func _on_beam_body_entered(body):
	if body.is_in_group(\"player\"):
		beam_target = body

func _on_beam_body_exited(body):
	if body.is_in_group(\"player\"):
		beam_target = null

func _on_ReloadTimer_timeout():
	can_shoot = true
	$KinematicBody2D/Sprite/gun/dot.hide()

func _boom_state(state):
	var sprite = $KinematicBody2D/Sprite/handR/weapon/Sprite
	if state == 1:
		sprite.texture = preload(\"res://assets/players/sean/boom.png\")
		sprite.position = Vector2(26,-7)
		$KinematicBody2D/Sprite/handR/weapon/CollisionShape2D.scale = Vector2(25,6)
	elif state == 2:
		sprite.texture = preload(\"res://assets/players/sean/boom2.png\")
		sprite.position = Vector2(33,-18)
		$KinematicBody2D/Sprite/handR/weapon/CollisionShape2D.scale = Vector2(38,8.33)
	elif state == 3:
		sprite.texture = preload(\"res://assets/players/sean/boom3.png\")
		sprite.position = Vector2(32,-28)
		$KinematicBody2D/Sprite/handR/weapon/CollisionShape2D.scale = Vector2(58,9)

func _on_BoomTimer_timeout():
	boomstate -= 1
	_boom_state(boomstate)
	if boomstate == 2:
		$BoomTimer.start()
"
__meta__ = {
"_edit_use_anchors_": false
}

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
autoplay = "ult"
anims/ult = ExtResource( 2 )

[node name="box" type="Sprite" parent="."]
modulate = Color( 0.25098, 0.25098, 0.25098, 1 )
position = Vector2( 355.515, 125.016 )
scale = Vector2( 625.016, 100 )
texture = ExtResource( 1 )

[node name="Label" type="Label" parent="."]
margin_left = 74.2285
margin_top = 109.389
margin_right = 633.229
margin_bottom = 316.389
custom_fonts/font = SubResource( 2 )
custom_colors/font_color = Color( 1, 0, 0, 1 )
text = "ENEMY PLAYER HEALTH REDUCED - 90%"
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Timer" type="Timer" parent="."]
wait_time = 7.0
autostart = true

[node name="ColorTimer" type="Timer" parent="."]
wait_time = 0.8
autostart = true
[connection signal="timeout" from="Timer" to="." method="_on_Timer_timeout"]
[connection signal="timeout" from="ColorTimer" to="." method="_on_ColorTimer_timeout"]
